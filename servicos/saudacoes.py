import logging
from utilitarios.texto import normalizar_texto
from database import obter_nome_do_visitante, salvar_conversa, atualizar_status
from constantes import EstadoVisitante
from servicos.fila_mensagens import enviar_mensagem_para_fila

def detectar_saudacao(texto: str) -> bool:
    """
    Verifica se a mensagem cont√©m uma sauda√ß√£o comum.
    """
    saudacoes = [
        "ola", "oi", "bom dia", "boa tarde", "boa noite",
        "eae", "e a√≠", "saudacoes", "a paz do senhor", "a paz de cristo", "paz"
    ]
    texto_normalizado = normalizar_texto(texto)
    return any(saudacao in texto_normalizado for saudacao in saudacoes)


def processar_saudacao(numero: str, message_sid: str, origem: str = "integra+") -> dict:
    """
    Processa mensagens de sauda√ß√£o e envia a resposta inicial do Integra+.
    """
    try:
        visitor_name = obter_nome_do_visitante(numero)
        if visitor_name:
            visitor_name = visitor_name.split()[0]
        else:
            visitor_name = "Visitante"

        resposta = f"""Ol√°, {visitor_name}! üòä
Sou o **Integra+**, seu assistente do Minist√©rio de Integra√ß√£o da MAIS DE CRISTO Canasvieiras.

Como posso te ajudar hoje?

1Ô∏è‚É£ Sou batizado e quero me tornar membro  
2Ô∏è‚É£ N√£o sou batizado e quero me tornar membro  
3Ô∏è‚É£ Gostaria de receber ora√ß√µes  
4Ô∏è‚É£ Quero saber os hor√°rios dos cultos  
5Ô∏è‚É£ Entrar no grupo do WhatsApp  
6Ô∏è‚É£ Outro assunto  

Estou aqui pra voc√™! üôå
"""

        # Atualiza o status e envia resposta
        atualizar_status(numero, EstadoVisitante.INICIO.value, origem=origem)
        enviar_mensagem_para_fila(numero, resposta)
        salvar_conversa(numero, resposta, tipo="enviada", sid=message_sid, origem=origem)

        logging.info(f"ü§ù Sauda√ß√£o processada para {numero}")

        return {
            "resposta": resposta,
            "estado_atual": "SAUDACAO",
            "proximo_estado": EstadoVisitante.INICIO.name
        }

    except Exception as e:
        logging.error(f"Erro ao processar sauda√ß√£o para {numero}: {e}")
        return {"erro": str(e)}
